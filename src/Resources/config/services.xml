<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="behat.code_coverage.skip">false</parameter>

        <parameter key="behat.code_coverage.config" type="collection">
            <parameter key="base_url">%mink.base_url%</parameter>
            <parameter key="auth">%behat.code_coverage.config.auth%</parameter>
            <parameter key="create">%behat.code_coverage.config.create%</parameter>
            <parameter key="read">%behat.code_coverage.config.read%</parameter>
            <parameter key="delete">%behat.code_coverage.config.delete%</parameter>
            <parameter key="drivers">%behat.code_coverage.config.drivers%</parameter>
            <parameter key="filter">%behat.code_coverage.config.filter%</parameter>
            <parameter key="report">%behat.code_coverage.config.report%</parameter>
            <parameter key="reports">%behat.code_coverage.config.reports%</parameter>
        </parameter>

    </parameters>

    <services>
        <!-- Code Coverage Cli Controller -->
        <service id="DVDoug\Behat\CodeCoverage\Controller\Cli\CodeCoverageController">
            <argument type="service" id="service_container" />
            <tag name="cli.controller" priority="80000" />
        </service>

        <service id="SebastianBergmann\CodeCoverage\Driver\PHPDBG">
            <tag name="dvdoug.code_coverage.driver"/>
        </service>

        <service id="SebastianBergmann\CodeCoverage\Driver\Xdebug">
            <tag name="dvdoug.code_coverage.driver"/>
        </service>

        <!-- The factory compiler pass will register available driver classes with the factory -->
        <service id="DVDoug\Behat\CodeCoverage\Common\Driver\Factory"/>

        <service id="GuzzleHttp\Client"/>

        <service id="SebastianBergmann\CodeCoverage\Filter" />

        <!-- The filter compiler pass will configure the injected coverage filter -->
        <service id="SebastianBergmann\CodeCoverage\CodeCoverage">
            <argument type="service" id="DVDoug\Behat\CodeCoverage\Driver\Proxy" />
            <argument type="service" id="SebastianBergmann\CodeCoverage\Filter" />
        </service>

        <!-- The driver compiler pass will register enabled drivers with the proxy -->
        <service id="DVDoug\Behat\CodeCoverage\Driver\Proxy" />

        <service id="behat.code_coverage.driver.local" class="SebastianBergmann\CodeCoverage\Driver\Driver">
            <factory service="DVDoug\Behat\CodeCoverage\Common\Driver\Factory"
                     method="create"
            />
            <tag name="behat.code_coverage.driver" alias="local" />
        </service>

        <service id="DVDoug\Behat\CodeCoverage\Driver\RemoteXdebug">
            <argument>%behat.code_coverage.config%</argument>
            <argument type="service" id="GuzzleHttp\Client" />
            <tag name="behat.code_coverage.driver" alias="remote" />
        </service>

        <service id="DVDoug\Behat\CodeCoverage\Listener\EventListener">
            <argument type="service" id="SebastianBergmann\CodeCoverage\CodeCoverage" />
            <argument type="service" id="DVDoug\Behat\CodeCoverage\Service\ReportService" />
            <argument>%behat.code_coverage.skip%</argument>
            <tag name="event_dispatcher.subscriber" />
        </service>

        <service id="DVDoug\Behat\CodeCoverage\Common\Report\Factory" />

        <service id="DVDoug\Behat\CodeCoverage\Service\ReportService">
            <argument>%behat.code_coverage.config%</argument>
            <argument type="service" id="DVDoug\Behat\CodeCoverage\Common\Report\Factory" />
        </service>
    </services>

</container>
